XML

1. What is the difference between a valid document and a well-formed one?

The former satisfies structural rules specified in its DTD, the latter is
syntactically correct (w.r.t. unique root and tags nesting properly)

2. Can a document that does not specify a DTD be valid?

No. (Well, that's a little sticklish.  It can specify some other form of XML-structure, using 
XML Query or another structure language.)

3. What is the benefit of separating display from semantic content?

Different types of display, e.g. for different devices, can be specified for
the same document (with same semantic content).  Also, the semantic content
becomes easier to query since there is less "noise" due to display-related
markup. 

4. Which kind of parser has greater memory requirements, a DOM parser or a
   SAX parser?  Why may you sometimes prefer the one with greater memory
   requirements? 

DOM parser -- because it build a complete DOM tree, which you would otherwise
have to build yourself if using a SAX parser.


5. Under what circumstances would the two XPath expressions below return the same result:
	/book//author
 	/book/*/author

These would return the same results if 
a) There is only one element between "book" and "author" in the XML document, and 
b) The "author" element appear only at the second level below the "book" element


6. Consider the following DTD: 
 ------------------------------------------------------------------------------------
 <!ELEMENT Bibliography (Book)* >
 <!ELEMENT Book (title, author+, abstract) >
 <!ATTLIST Book year CDATA #IMPLIED >

 <!ELEMENT title (#PCDATA) >
 <!ELEMENT author (firstName, lastName, email?, website?, (officePhone | mobilePhone)*)>
 <!ELEMENT abstract (#PCDATA | bold | italic | underline)+ >

 <!ELEMENT firstName (#PCDATA) >
 <!ELEMENT lastName (#PCDATA) >
 <!ELEMENT email (#PCDATA) >
 <!ELEMENT website (#PCDATA) >
 <!ELEMENT officePhone (#PCDATA) >
 <!ELEMENT mobilePhone (#PCDATA) >
 <!ELEMENT bold (#PCDATA) >
 <!ELEMENT italic (#PCDATA) >
 <!ELEMENT underline (#PCDATA) >
-------------------------------------------------------------------------------------

  a) Can the author element have more than one email subelement?
   
   No.

  b) Can you have an empty Bibliography element? (i.e. "<bibliography> </bibliography>")
 
   Yes.

  c) Can an author element be specified without a lastname subelement?

   No. 


  d) Can an abstract element be empty? 
   
   No. 

  e) What does the XPath query "//author[email]" do? Specify the elements that this
     query outputs. 

    Selects all author elements that have an email. 


   f) What does the following XQuery do: (notice the "bibliography//book" in the FOR clause)

	for $b in bibliography//book
	where $b/@year > 2004
	return <book> {$b/title} </book>

    This query returns the title of all books that were published after 2004
    Note that each title is returned as <book><title>xxx</title></book>.
    Note also that there is no root element in the returned set, so the
    result is not well-formed XML.
