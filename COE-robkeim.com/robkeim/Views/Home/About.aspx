<%@ Page Language="C#" MasterPageFile="~/Views/Shared/Site.Master" Inherits="System.Web.Mvc.ViewPage" %>

<asp:Content ID="TitleContent" ContentPlaceHolderID="TitleContent" runat="server">
    How it works
</asp:Content>
<asp:Content ID="MainContent" ContentPlaceHolderID="MainContent" runat="server">
    <h2>
        How it works
    </h2>
    <p>
        <b>What's the problem?</b>
    </p>
    <p>
        Everyone who signs up, needs to be paired with someone (other than themselves) to
        give an ornament to. The easiest way to do this is to put all of the names into
        a hat, and randomly draw and assign everyone a match. This works, but it doesn’t
        take into consideration relationships between people, and people that you’ve given
        to previously.
    </p>
    <p>
        If you consider that each person has some matches that are better than others, and
        want to assign each person the best match, the problem becomes harder... and more
        interesting :) How do you pair everyone with their “optimal” or near optimal match?
    </p>
    <p>
        <b>How did I solve this?</b>
    </p>
    <p>
        First I had to determine what made the “optimal” match.
    </p>
    Here are the criteria that I use to determine how good of a match someone is for
    someone else (starting from least optimal):
    <ul>
        <li>Your spouse</li>
        <li>You siblings (not the ones through marriage)</li>
        <li>The person you gave to last year</li>
        <li>The person you gave to two years ago</li>
        <li>The person you gave to ...etc</li>
    </ul>
    <p>
        Then, I assigned Person2ues to each of these scenarios, and created a grid comparing
        each person giving to each other person with the corresponding Person2ue. I used higher
        Person2ues to indicate less optimal matches. I then calculated the sum of all of the
        Person2ues for each person, to find the person that was most constrained. Then I found
        a match for that person, and updated the grid accordingly. I repeated this process
        until everyone had a pairing.
    </p>
    <p>
        <b>Example</b>
    </p>
    <p>
        In this example I'll use Person1, Person2, Person3, and Person4.
    </p>
    We have the following (both real and fabricated) constraints
    <ul>
        <li>Person1 and Person2 are married</li>
        <li>Person1 and Person4 are siblings</li>
        <li>Person3 gave to Person2 last year</li>
        <li>Person4 gave to Person3 two years ago</li>
    </ul>
    I will assign the following weights for each of the constraints
    <ul>
        <li>Marriages have a weight of 10</li>
        <li>Siblings have a weight of 5</li>
        <li>People you gave to last year have a weight of 2</li>
        <li>People you gave to two years ago have a weight of 1</li>
    </ul>
    <p>
        This allows us to generate the following matrix (with the person listed in the row
        giving to the person listed in the column):
    </p>
    <table>
        <tr>
            <th>
            </th>
            <th>
                Person1
            </th>
            <th>
                Person4
            </th>
            <th>
                Garrett
            </th>
            <th>
                Person2
            </th>
            <th>
                Total
            </th>
        </tr>
        <tr>
            <td>
                Person1
            </td>
            <td>
                --
            </td>
            <td>
                5
            </td>
            <td>
                0
            </td>
            <td>
                10
            </td>
            <td>
                15
            </td>
        </tr>
        <tr>
            <td>
                Person4
            </td>
            <td>
                5
            </td>
            <td>
                --
            </td>
            <td>
                1
            </td>
            <td>
                0
            </td>
            <td>
                6
            </td>
        </tr>
        <tr>
            <td>
                Person3
            </td>
            <td>
                0
            </td>
            <td>
                0
            </td>
            <td>
                --
            </td>
            <td>
                2
            </td>
            <td>
                2
            </td>
        </tr>
        <tr>
            <td>
                Person2
            </td>
            <td>
                10
            </td>
            <td>
                0
            </td>
            <td>
                0
            </td>
            <td>
                --
            </td>
            <td>
                10
            </td>
        </tr>
    </table>
    <p>
        On the first pass through, Person1 is the most constrained, so we'll start by matching
        him. We can see that Person3 is his optimal match.
    </p>
    <p>
        Now this gives us an updated matrix of:
    </p>
    <table>
        <tr>
            <th>
            </th>
            <th>
                Person1
            </th>
            <th>
                Person4
            </th>
            <th>
                Person3
            </th>
            <th>
                Person2
            </th>
            <th>
                Total
            </th>
        </tr>
        <tr>
            <td>
                Person1
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
        </tr>
        <tr>
            <td>
                Person4
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                1
            </td>
            <td>
                0
            </td>
            <td>
                1
            </td>
        </tr>
        <tr>
            <td>
                Person3
            </td>
            <td>
                --
            </td>
            <td>
                0
            </td>
            <td>
                --
            </td>
            <td>
                2
            </td>
            <td>
                2
            </td>
        </tr>
        <tr>
            <td>
                Person2
            </td>
            <td>
                --
            </td>
            <td>
                0
            </td>
            <td>
                0
            </td>
            <td>
                --
            </td>
            <td>
                0
            </td>
        </tr>
    </table>
    <p>
        Now the most constrained is Person3, so we'll match him next.
    </p>
    <p>
        His optimal match is Person4, which gives us an updated table:
    </p>
    <table>
        <tr>
            <th>
            </th>
            <th>
                Person1
            </th>
            <th>
                Person4
            </th>
            <th>
                Person3
            </th>
            <th>
                Person2
            </th>
            <th>
                Total
            </th>
        </tr>
        <tr>
            <td>
                Person1
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
        </tr>
        <tr>
            <td>
                Person4
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                1
            </td>
            <td>
                0
            </td>
            <td>
                1
            </td>
        </tr>
        <tr>
            <td>
                Person3
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
        </tr>
        <tr>
            <td>
                Person2
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                0
            </td>
            <td>
                --
            </td>
            <td>
                0
            </td>
        </tr>
    </table>
    <p>
        Now Person4 is the most constrained, so placing her with Person2 gives us an updated
        table of:
    </p>
    <table>
        <tr>
            <th>
            </th>
            <th>
                Person1
            </th>
            <th>
                Person4
            </th>
            <th>
                Person3
            </th>
            <th>
                Person2
            </th>
            <th>
                Total
            </th>
        </tr>
        <tr>
            <td>
                Person1
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
        </tr>
        <tr>
            <td>
                Person4
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
        </tr>
        <tr>
            <td>
                Person3
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
        </tr>
        <tr>
            <td>
                Person2
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                0
            </td>
            <td>
                --
            </td>
            <td>
                0
            </td>
        </tr>
    </table>
    <p>
        Last, we'll match Person2 with Person3, giving us the final table:
    </p>
    <table>
        <tr>
            <th>
            </th>
            <th>
                Person1
            </th>
            <th>
                Person4
            </th>
            <th>
                Person3
            </th>
            <th>
                Person2
            </th>
        </tr>
        <tr>
            <td>
                Person1
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
        </tr>
        <tr>
            <td>
                Person4
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
        </tr>
        <tr>
            <td>
                Person3
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
        </tr>
        <tr>
            <td>
                Person2
            </td>
            <td>
                --
            </td>
            <td>
                --
            </td>
            <td>
                ****
            </td>
            <td>
                --
            </td>
        </tr>
    </table>
</asp:Content>
